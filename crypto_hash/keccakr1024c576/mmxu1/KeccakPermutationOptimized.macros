/*
Algorithm Name: Keccak
Authors: Guido Bertoni, Joan Daemen, Michaël Peeters and Gilles Van Assche
Date: March 26, 2009

This code, originally by Guido Bertoni, Joan Daemen, Michaël Peeters and
Gilles Van Assche as a part of the SHA-3 submission, is hereby put in the
public domain. It is given as is, without any guarantee.

For more information, feedback or questions, please refer to our website:
http://keccak.noekeon.org/
*/

#if (Unrolling == 18)
#define rounds \
	prepareTheta \
	thetaRhoPiChiIotaPrepareTheta( 0, A, E) \
	thetaRhoPiChiIotaPrepareTheta( 1, E, A) \
	thetaRhoPiChiIotaPrepareTheta( 2, A, E) \
	thetaRhoPiChiIotaPrepareTheta( 3, E, A) \
	thetaRhoPiChiIotaPrepareTheta( 4, A, E) \
	thetaRhoPiChiIotaPrepareTheta( 5, E, A) \
	thetaRhoPiChiIotaPrepareTheta( 6, A, E) \
	thetaRhoPiChiIotaPrepareTheta( 7, E, A) \
	thetaRhoPiChiIotaPrepareTheta( 8, A, E) \
	thetaRhoPiChiIotaPrepareTheta( 9, E, A) \
	thetaRhoPiChiIotaPrepareTheta(10, A, E) \
	thetaRhoPiChiIotaPrepareTheta(11, E, A) \
	thetaRhoPiChiIotaPrepareTheta(12, A, E) \
	thetaRhoPiChiIotaPrepareTheta(13, E, A) \
	thetaRhoPiChiIotaPrepareTheta(14, A, E) \
	thetaRhoPiChiIotaPrepareTheta(15, E, A) \
	thetaRhoPiChiIotaPrepareTheta(16, A, E) \
	thetaRhoPiChiIota(17, E, A) \
    copyToState(state, A)
#elif (Unrolling == 9)
#define rounds \
    prepareTheta \
    for(i=0; i<18; i+=9) { \
		thetaRhoPiChiIotaPrepareTheta(i  , A, E) \
		thetaRhoPiChiIotaPrepareTheta(i+1, E, A) \
		thetaRhoPiChiIotaPrepareTheta(i+2, A, E) \
		thetaRhoPiChiIotaPrepareTheta(i+3, E, A) \
		thetaRhoPiChiIotaPrepareTheta(i+4, A, E) \
		thetaRhoPiChiIotaPrepareTheta(i+5, E, A) \
		thetaRhoPiChiIotaPrepareTheta(i+6, A, E) \
		thetaRhoPiChiIotaPrepareTheta(i+7, E, A) \
		thetaRhoPiChiIotaPrepareTheta(i+8, A, E) \
		copyStateVariables(A, E) \
    } \
    copyToState(state, A)
#elif (Unrolling == 6)
#define rounds \
    prepareTheta \
    for(i=0; i<18; i+=6) { \
		thetaRhoPiChiIotaPrepareTheta(i  , A, E) \
		thetaRhoPiChiIotaPrepareTheta(i+1, E, A) \
		thetaRhoPiChiIotaPrepareTheta(i+2, A, E) \
		thetaRhoPiChiIotaPrepareTheta(i+3, E, A) \
		thetaRhoPiChiIotaPrepareTheta(i+4, A, E) \
		thetaRhoPiChiIotaPrepareTheta(i+5, E, A) \
    } \
    copyToState(state, A)
#elif (Unrolling == 3)
#define rounds \
    prepareTheta \
    for(i=0; i<18; i+=3) { \
		thetaRhoPiChiIotaPrepareTheta(i  , A, E) \
		thetaRhoPiChiIotaPrepareTheta(i+1, E, A) \
		thetaRhoPiChiIotaPrepareTheta(i+2, A, E) \
		copyStateVariables(A, E) \
    } \
    copyToState(state, A)
#elif (Unrolling == 2)
#define rounds \
    prepareTheta \
    for(i=0; i<18; i+=2) { \
        thetaRhoPiChiIotaPrepareTheta(i  , A, E) \
        thetaRhoPiChiIotaPrepareTheta(i+1, E, A) \
    } \
    copyToState(state, A)
#elif (Unrolling == 1)
#define rounds \
    prepareTheta \
    for(i=0; i<18; i++) { \
		thetaRhoPiChiIotaPrepareTheta(i  , A, E) \
		copyStateVariables(A, E) \
    } \
    copyToState(state, A)
#else
#error "Unrolling is not correctly specified!"
#endif
